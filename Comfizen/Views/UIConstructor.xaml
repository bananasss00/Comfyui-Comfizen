<Window x:Class="Comfizen.UIConstructor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:Comfizen"
        xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
        mc:Ignorable="d"
        Title="{local:Translate UIConstructor_Title}" Height="700" Width="1000"
        WindowStartupLocation="CenterOwner"
        Background="{StaticResource PrimaryBackground}"
        Style="{StaticResource CustomWindowStyle}">

    <Window.Resources>
        <local:NodeIdsToInfoConverter x:Key="NodeIdsToInfoConverter"/>
        <local:AvailableNodesConverter  x:Key="AvailableNodesConverter"/>
        
        <Popup x:Key="ColorPickerPopup"
               StaysOpen="False"
               Placement="MousePoint"
               AllowsTransparency="True">
            <Border Background="{StaticResource SecondaryBackground}"
                    BorderBrush="{StaticResource TertiaryBackground}"
                    BorderThickness="1"
                    CornerRadius="3"
                    Padding="5">
                <StackPanel>
                    <ItemsControl ItemsSource="{Binding Path=DataContext.ColorPalette, Source={x:Reference RootGrid}}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel MaxWidth="128"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button ToolTip="{Binding Name}" Margin="2">
                                    <Button.CommandParameter>
                                        <MultiBinding Converter="{StaticResource MultiValueToArrayConverter}">
                                            <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=Popup}"/>
                                            <Binding Path="Hex"/>
                                        </MultiBinding>
                                    </Button.CommandParameter>
                                    <Button.Command>
                                        <Binding Path="DataContext.SetHighlightColorCommand" Source="{x:Reference RootGrid}"/>
                                    </Button.Command>
                                    <Button.Template>
                                        <ControlTemplate TargetType="Button">
                                            <Border x:Name="ColorSwatch"
                                                    Width="24" Height="24"
                                                    CornerRadius="3"
                                                    BorderBrush="Gray"
                                                    BorderThickness="1"
                                                    Background="{Binding Hex, Converter={StaticResource HexToBrushConverter}}"/>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="ColorSwatch" Property="BorderBrush" Value="White"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    
                    <Separator Margin="0,5"/>
                    
                    <Button Content="{local:Translate UIConstructor_ClearColor}" Padding="5,3">
                         <Button.CommandParameter>
                              <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=Popup}"/>
                         </Button.CommandParameter>
                         <Button.Command>
                             <Binding Path="DataContext.ClearHighlightColorCommand" Source="{x:Reference RootGrid}"/>
                         </Button.Command>
                    </Button>
                </StackPanel>
            </Border>
        </Popup>

        <Style TargetType="TextBox" x:Key="InlineEditTextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <EventSetter Event="LostFocus" Handler="InlineTextBox_LostFocus"/>
            <EventSetter Event="KeyDown" Handler="InlineTextBox_KeyDown"/>
            <EventSetter Event="GotFocus" Handler="InlineTextBox_GotFocus"/>
            <Style.Triggers>
                <Trigger Property="IsVisible" Value="True">
                    <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="TabControl">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style TargetType="TabItem">
            <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
            <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border x:Name="Border" BorderThickness="0,0,0,2" BorderBrush="Transparent" Margin="0,0,2,0" Background="{TemplateBinding Background}">
                            <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryAccentBrush}"/>
                                <Setter Property="Background" Value="{StaticResource PrimaryBackground}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid x:Name="RootGrid" Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <TabControl Grid.Row="0">
            <TabItem Header="{local:Translate UIConstructor_LayoutHeader}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*" MinWidth="300"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="5*" MinWidth="450"/>
                    </Grid.ColumnDefinitions>

                    <!-- START OF CHANGES: Left Panel for Tabs and Unassigned Groups -->
                    <DockPanel Grid.Column="0">
                        <Button DockPanel.Dock="Top" Content="{local:Translate UIConstructor_LoadApiFile}" Command="{Binding LoadCommand}" Margin="0,0,0,10"/>
                        
                        <Border Background="{StaticResource SecondaryBackground}" CornerRadius="5">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <!-- ADDED: Row for the new GridSplitter -->
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <!-- Tabs Management -->
                                <DockPanel Grid.Row="0">
                                    <Button DockPanel.Dock="Right" Content="+" Command="{Binding AddTabCommand}" ToolTip="{local:Translate UIConstructor_AddTab}" Margin="5" Width="30" Height="30"/>
                                    <TextBlock DockPanel.Dock="Top" Text="{local:Translate UIConstructor_TabsHeader}" FontWeight="Bold" Margin="10,10,10,5"/>
                                    
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <ItemsControl ItemsSource="{Binding Workflow.Tabs}" Margin="5,0,5,5"
                                                      AllowDrop="True" Drop="TabList_Drop" DragOver="TabList_DragOver">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate DataType="{x:Type local:WorkflowTabDefinition}">
                                                    <!-- START OF CHANGES: Added StackPanel and drop indicators for reordering -->
                                                    <StackPanel AllowDrop="True" 
                                                                Drop="Tab_Drop" 
                                                                DragOver="Tab_DragOver" 
                                                                DragLeave="Tab_DragLeave" 
                                                                Background="Transparent">
                                                        
                                                        <Border x:Name="TabDropIndicatorBefore" Height="2" Background="{StaticResource PrimaryAccentBrush}" CornerRadius="1" Margin="0,1" Visibility="Collapsed" IsHitTestVisible="False"/>

                                                        <Border x:Name="TabBorder" CornerRadius="3" Margin="0,2" Padding="8"
                                                                PreviewMouseLeftButtonDown="TabDefinition_PreviewMouseLeftButtonDown"
                                                                AllowDrop="True" Drop="TabDefinition_Drop" DragEnter="TabDefinition_DragEnter" DragLeave="TabDefinition_DragLeave">
                                                            <Border.Style>
                                                                <Style TargetType="Border">
                                                                    <!-- Default background color -->
                                                                    <Setter Property="Background" Value="{StaticResource TertiaryBackground}" />
                                                                    <Style.Triggers>
                                                                        <!-- Trigger to highlight the selected tab -->
                                                                        <DataTrigger Value="True">
                                                                            <DataTrigger.Binding>
                                                                                <MultiBinding Converter="{StaticResource EqualityConverter}">
                                                                                    <Binding /> <!-- The current WorkflowTabDefinition -->
                                                                                    <Binding Path="DataContext.SelectedTab" RelativeSource="{RelativeSource AncestorType=ItemsControl}" />
                                                                                </MultiBinding>
                                                                            </DataTrigger.Binding>
                                                                            <Setter Property="Background" Value="{StaticResource PrimaryAccentBrush}" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Border.Style>
                                                            
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                
                                                                <Grid Grid.Column="0" Margin="0,0,5,0">
                                                                    <TextBlock Text="{Binding Name}" Visibility="{Binding IsRenaming, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert}" MouseLeftButtonDown="TabName_MouseLeftButtonDown"/>
                                                                    <TextBox Text="{Binding Name, UpdateSourceTrigger=Explicit}" Style="{StaticResource InlineEditTextBox}" Visibility="{Binding IsRenaming, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                                </Grid>
                                                                
                                                                <Button Grid.Column="1" Content="&#xE74D;" Style="{StaticResource IconButton}" Width="20" Height="20" 
                                                                        Command="{Binding DataContext.RemoveTabCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}" 
                                                                        CommandParameter="{Binding}"/>
                                                            </Grid>
                                                        </Border>
                                                        
                                                        <Border x:Name="TabDropIndicatorAfter" Height="2" Background="{StaticResource PrimaryAccentBrush}" CornerRadius="1" Margin="0,1" Visibility="Collapsed" IsHitTestVisible="False"/>
                                                    </StackPanel>
                                                    <!-- END OF CHANGES -->
                                                    <DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Value="True">
                                                            <Setter TargetName="TabBorder" Property="Background" Value="{StaticResource PrimaryAccentBrush}"/>
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </ScrollViewer>
                                </DockPanel>
                                
                                <GridSplitter Grid.Row="1" ResizeDirection="Rows" Style="{StaticResource HorizontalGridSplitterStyle}" />

                                <!-- Unassigned Groups -->
                                <DockPanel Grid.Row="2" Margin="0,10,0,0">
                                    <TextBlock DockPanel.Dock="Top" Text="{local:Translate UIConstructor_UnassignedGroupsHeader}" FontWeight="Bold" Margin="10,5,10,5"/>
                                    <!-- (ListBox для нераспределенных групп остается без изменений) -->
                                    <ListBox ItemsSource="{Binding UnassignedGroups}" Background="Transparent" BorderThickness="0" Margin="5"
                                             AllowDrop="True" Drop="UnassignedGroups_Drop" DragEnter="UnassignedGroups_DragEnter">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type local:WorkflowGroup}">
                                                <Border Background="{StaticResource TertiaryBackground}" CornerRadius="3" Margin="0,2" Padding="8" PreviewMouseLeftButtonDown="GroupHeader_PreviewMouseLeftButtonDown">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>

                                                        <TextBlock Grid.Column="0" Text="{Binding Name}" ToolTip="{local:Translate UIConstructor_DragGroupTooltip}" VerticalAlignment="Center" Margin="0,0,5,0"/>

                                                        <Button Grid.Column="1" 
                                                                Content="&#xE74D;" 
                                                                Style="{StaticResource IconButton}" 
                                                                Width="20" Height="20"
                                                                ToolTip="{local:Translate UIConstructor_DeleteGroup}"
                                                                Command="{Binding DataContext.RemoveGroupCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                                                CommandParameter="{Binding}"/>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <ListBox.ItemContainerStyle><Style TargetType="ListBoxItem"><Setter Property="Template"><Setter.Value><ControlTemplate TargetType="ListBoxItem"><ContentPresenter/></ControlTemplate></Setter.Value></Setter></Style></ListBox.ItemContainerStyle>
                                    </ListBox>
                                </DockPanel>
                                
                                <!-- ADDED: GridSplitter and Available Fields section -->
                                <GridSplitter Grid.Row="3" ResizeDirection="Rows" Style="{StaticResource HorizontalGridSplitterStyle}" />
                                
                                <DockPanel Grid.Row="4" Margin="0,10,0,0">
                                    <Grid DockPanel.Dock="Top" Margin="10,0,10,10">
                                        <TextBox x:Name="SearchBox" Text="{Binding SearchFilter, UpdateSourceTrigger=PropertyChanged}" GotFocus="SearchBox_GotFocus"/>
                                        <TextBlock Text="{local:Translate UIConstructor_SearchPlaceholder}" Foreground="{StaticResource TextSecondaryBrush}" Margin="8,0" IsHitTestVisible="False" VerticalAlignment="Center">
                                            <TextBlock.Style><Style TargetType="TextBlock"><Setter Property="Visibility" Value="Collapsed"/><Style.Triggers><DataTrigger Binding="{Binding Text, ElementName=SearchBox}" Value=""><Setter Property="Visibility" Value="Visible"/></DataTrigger></Style.Triggers></Style></TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                    <TextBlock DockPanel.Dock="Top" Text="{local:Translate UIConstructor_AvailableFields}" FontWeight="Bold" Margin="10,5,10,5"/>
                                    <ListBox ItemsSource="{Binding AvailableFields}" Background="Transparent" BorderThickness="0" Margin="5"
                                             AllowDrop="True" Drop="DeleteField_Drop" DragEnter="DeleteField_DragEnter">
                                        <ListBox.ItemTemplate><DataTemplate><Border Background="{StaticResource TertiaryBackground}" CornerRadius="3" Margin="0,2" Padding="8" PreviewMouseLeftButtonDown="AvailableField_PreviewMouseLeftButtonDown"><TextBlock Text="{Binding Name}" ToolTip="{Binding Path}"/></Border></DataTemplate></ListBox.ItemTemplate>
                                        <ListBox.ItemContainerStyle><Style TargetType="ListBoxItem"><Setter Property="Template"><Setter.Value><ControlTemplate TargetType="ListBoxItem"><ContentPresenter/></ControlTemplate></Setter.Value></Setter></Style></ListBox.ItemContainerStyle>
                                    </ListBox>
                                </DockPanel>
                            </Grid>
                        </Border>
                    </DockPanel>
                    <!-- END OF CHANGES: Left Panel -->

                    <GridSplitter Grid.Column="1" 
                                  Style="{StaticResource VerticalGridSplitterStyle}"
                                  ResizeBehavior="PreviousAndNext"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Stretch"/>

                    <!-- START OF CHANGES: Right Panel for Selected Tab's Content -->
                    <Border Grid.Column="2" Background="{StaticResource SecondaryBackground}" CornerRadius="5">
                        <!-- ADDED: AllowDrop and Drop handler -->
                        <DockPanel Margin="10" AllowDrop="True" Drop="TabContent_Drop" DragEnter="TabContent_DragEnter">
                            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,0,0,10">
                                <Button Content="{local:Translate UIConstructor_AddGroup}" Command="{Binding AddGroupCommand}" HorizontalAlignment="Left"/>
                                <TextBlock Text="{Binding SelectedTab.Name, StringFormat='{}{0}'}" FontWeight="Bold" FontSize="16" Margin="15,0" VerticalAlignment="Center"/>
                            </StackPanel>
                            
                            <ScrollViewer x:Name="GroupsScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                <ItemsControl ItemsSource="{Binding SelectedTabGroups}">
                                        
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <!-- START OF CHANGES: Replace StackPanel with Expander -->
                                            <StackPanel AllowDrop="True" Drop="Group_Drop" DragEnter="Group_DragOver" DragLeave="Group_DragLeave" DragOver="Group_DragOver" Background="Transparent">
                                                <Border x:Name="GroupDropIndicatorBefore" Height="3" Background="{StaticResource PrimaryAccentBrush}" CornerRadius="1.5" Margin="0,2" Visibility="Collapsed" IsHitTestVisible="False"/>
                                                
                                                <Expander IsExpanded="{Binding IsExpandedInDesigner, Mode=TwoWay}" Margin="0,2">
                                                    <Expander.Header>
                                                        <Border BorderBrush="{StaticResource TertiaryBackground}" BorderThickness="1"
                                                                CornerRadius="3,3,0,0" Padding="8" PreviewMouseLeftButtonDown="GroupHeader_PreviewMouseLeftButtonDown"
                                                                MouseRightButtonUp="ShowColorPickerPopup">
                                                            <Border.Style>
                                                                <Style TargetType="Border">
                                                                    <Setter Property="Background" Value="{StaticResource TertiaryBackground}"/>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding HighlightColor}" Value="{x:Null}">
                                                                            <Setter Property="Background" Value="{StaticResource TertiaryBackground}"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Border.Style>
                                                             <Border.Background>
                                                                    <MultiBinding Converter="{StaticResource PriorityColorToBrushConverter}">
                                                                         <Binding Path="HighlightColor"/>
                                                                    </MultiBinding>
                                                             </Border.Background>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="Auto" />
                                                                </Grid.ColumnDefinitions>

                                                                <StackPanel Grid.Column="0" Orientation="Horizontal" Visibility="{Binding IsRenaming, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert}">
                                                                    <TextBlock Text="{Binding Name}" FontWeight="Bold" MouseLeftButtonDown="GroupName_MouseLeftButtonDown"/>
                                                                </StackPanel>
                                                                <TextBox Grid.Column="0" Text="{Binding Name, UpdateSourceTrigger=Explicit}" Style="{StaticResource InlineEditTextBox}" Visibility="{Binding IsRenaming, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                                                <StackPanel Grid.Column="1" Orientation="Horizontal">
                                                                    <Button Content="&#xE162;" FontFamily="Segoe MDL2 Assets" 
                                                                            Style="{StaticResource IconButton}" Width="24" Height="24"
                                                                            ToolTip="{local:Translate UIConstructor_AddMarkdownField}"
                                                                            Command="{Binding DataContext.AddMarkdownFieldCommand, ElementName=RootGrid}"
                                                                            CommandParameter="{Binding}"/>
                                                                    <Button Content="&#xE945;" FontFamily="Segoe MDL2 Assets" 
                                                                            Style="{StaticResource IconButton}" Width="24" Height="24"
                                                                            ToolTip="{local:Translate UIConstructor_AddScriptButtonField}"
                                                                            Command="{Binding DataContext.AddScriptButtonFieldCommand, ElementName=RootGrid}"
                                                                            CommandParameter="{Binding}"/>
                                                                    <Button Content="&#xE775;" FontFamily="Segoe MDL2 Assets" 
                                                                            Style="{StaticResource IconButton}" Width="24" Height="24"
                                                                            ToolTip="{local:Translate UIConstructor_AddNodeBypassField}"
                                                                            Command="{Binding DataContext.AddNodeBypassFieldCommand, ElementName=RootGrid}"
                                                                            CommandParameter="{Binding}"/>
                                                                    <Button Content="&#xE74D;" Style="{StaticResource IconButton}" Width="24" Height="24" 
                                                                            ToolTip="{local:Translate UIConstructor_DeleteGroup}" 
                                                                            Command="{Binding DataContext.RemoveGroupCommand, ElementName=RootGrid}" 
                                                                            CommandParameter="{Binding}"/>
                                                                </StackPanel>
                                                            </Grid>
                                                        </Border>
                                                    </Expander.Header>
                                                    <Border BorderBrush="{StaticResource TertiaryBackground}" BorderThickness="1,0,1,1" CornerRadius="0,0,3,3">
                                                        <Grid>
                                                            <Border Opacity="0.2"
                                                                    Background="{Binding HighlightColor, Converter={StaticResource HexToBrushConverter}}"/>
                                                            <ItemsControl ItemsSource="{Binding Fields}" Padding="8">
                                                                <ItemsControl.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <StackPanel AllowDrop="True" DragEnter="Field_DragOver" DragLeave="Field_DragLeave" DragOver="Field_DragOver" Drop="Field_Drop" Background="Transparent">
                                                                            <Border x:Name="DropIndicatorBefore" Height="2" Background="{StaticResource PrimaryAccentBrush}" CornerRadius="1" Margin="0,1" Visibility="Collapsed" IsHitTestVisible="False"/>
                                                                            <Border BorderBrush="#44FFFFFF" BorderThickness="0,0,0,1" Margin="0,2" Padding="5" 
                                                                                    MouseLeftButtonDown="GroupedField_MouseLeftButtonDown"
                                                                                    MouseRightButtonUp="ShowColorPickerPopup">
                                                                                <Grid>
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="Auto"/> <!-- For the accent line -->
                                                                                        <ColumnDefinition Width="*"/>    <!-- For the content -->
                                                                                    </Grid.ColumnDefinitions>

                                                                                    <!-- 1. The new accent line Border -->
                                                                                    <Border Grid.Column="0" Width="3" CornerRadius="1.5" Margin="0,0,8,0">
                                                                                        <Border.Background>
                                                                                            <MultiBinding Converter="{StaticResource PriorityColorToBrushConverter}">
                                                                                                <Binding Path="HighlightColor"/>
                                                                                                <!-- This finds the parent ItemsControl (which holds the fields) and gets its DataContext (the WorkflowGroup) -->
                                                                                                <Binding Path="DataContext.HighlightColor" RelativeSource="{RelativeSource AncestorType=ItemsControl}"/>
                                                                                            </MultiBinding>
                                                                                        </Border.Background>
                                                                                    </Border>
                                                                                    <Grid Grid.Column="1">
                                                                                        <Grid.RowDefinitions>
                                                                                            <RowDefinition Height="Auto"/>
                                                                                            <RowDefinition Height="Auto"/>
                                                                                            <RowDefinition Height="Auto"/>
                                                                                        </Grid.RowDefinitions>

                                                                                        <Grid Grid.Row="0">
                                                                                            <Grid.ColumnDefinitions>
                                                                                                <ColumnDefinition Width="*"/>
                                                                                                <ColumnDefinition Width="Auto"/>
                                                                                            </Grid.ColumnDefinitions>
                                        
                                                                                            <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Visibility="{Binding IsRenaming, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert}">
                                                                                                <TextBlock Text="{Binding Name}" ToolTip="{Binding Path}" MouseLeftButtonDown="FieldName_MouseLeftButtonDown"/>
                                                                                            </StackPanel>
                        
                                                                                            <TextBox Grid.Column="0" Text="{Binding Name, UpdateSourceTrigger=Explicit}" Style="{StaticResource InlineEditTextBox}" Visibility="{Binding IsRenaming, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                                                            
                                                                                            <StackPanel Grid.Column="1" Orientation="Horizontal">
                                                                                                <StackPanel Orientation="Horizontal" Margin="10,0,0,0" VerticalAlignment="Center">
                                                                                                    <StackPanel.Style><Style TargetType="StackPanel"><Setter Property="Visibility" Value="Collapsed"/><Style.Triggers><DataTrigger Binding="{Binding Type}" Value="SliderInt"><Setter Property="Visibility" Value="Visible"/></DataTrigger><DataTrigger Binding="{Binding Type}" Value="SliderFloat"><Setter Property="Visibility" Value="Visible"/></DataTrigger></Style.Triggers></Style></StackPanel.Style>
                                                                                                    <TextBlock Text="Min:" VerticalAlignment="Center" Margin="5,0"/><xctk:DoubleUpDown Value="{Binding MinValue, UpdateSourceTrigger=PropertyChanged}" Width="50" FormatString="F4" Increment="0.1"/>
                                                                                                    <TextBlock Text="Max:" VerticalAlignment="Center" Margin="5,0"/><xctk:DoubleUpDown Value="{Binding MaxValue, UpdateSourceTrigger=PropertyChanged}" Width="50" FormatString="F4" Increment="0.1"/>
                                                                                                    <TextBlock Text="Step:" VerticalAlignment="Center" Margin="5,0"/><xctk:DoubleUpDown Value="{Binding StepValue, UpdateSourceTrigger=PropertyChanged}" Width="50" FormatString="F4" Increment="0.01"/>
                                                                                                </StackPanel>
                                                                                                <StackPanel Orientation="Horizontal" Margin="5,0,0,0" VerticalAlignment="Center">
                                                                                                    <StackPanel.Style><Style TargetType="StackPanel"><Setter Property="Visibility" Value="Collapsed"/><Style.Triggers><DataTrigger Binding="{Binding Type}" Value="SliderFloat"><Setter Property="Visibility" Value="Visible"/></DataTrigger></Style.Triggers></Style></StackPanel.Style>
                                                                                                    <TextBlock Text="{local:Translate UIConstructor_Field_Precision}" VerticalAlignment="Center" Margin="5,0"/><xctk:IntegerUpDown Value="{Binding Precision, UpdateSourceTrigger=PropertyChanged}" Width="40" Minimum="0" Maximum="8"/>
                                                                                                </StackPanel>
                                                                                                <Grid Margin="10,0,0,0" VerticalAlignment="Center">
                                                                                                    <TextBlock>
                                                                                                        <TextBlock.Text>
                                                                                                            <Binding Path="Type" />
                                                                                                        </TextBlock.Text>
                                                                                                        <TextBlock.Style>
                                                                                                            <Style TargetType="TextBlock">
                                                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                                                                <Style.Triggers>
                                                                                                                    <DataTrigger Binding="{Binding Type}" Value="Markdown"><Setter Property="Visibility" Value="Visible"/></DataTrigger>
                                                                                                                    <DataTrigger Binding="{Binding Type}" Value="ScriptButton"><Setter Property="Visibility" Value="Visible"/></DataTrigger>
                                                                                                                    <DataTrigger Binding="{Binding Type}" Value="NodeBypass"><Setter Property="Visibility" Value="Visible"/></DataTrigger>
                                                                                                                </Style.Triggers>
                                                                                                            </Style>
                                                                                                        </TextBlock.Style>
                                                                                                    </TextBlock>
                                                                                                    <ComboBox ItemsSource="{Binding DataContext.FieldTypes, RelativeSource={RelativeSource AncestorType=Window}}"
                                                                                                        SelectedItem="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                                                        MouseLeftButtonDown="Control_StopsBubble_MouseLeftButtonDown">
                                                                                                        <ComboBox.Style>
                                                                                                            <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                                                                                                <Setter Property="Visibility" Value="Visible"/>
                                                                                                                <Style.Triggers>
                                                                                                                    <DataTrigger Binding="{Binding Type}" Value="Markdown"><Setter Property="Visibility" Value="Collapsed"/></DataTrigger>
                                                                                                                    <DataTrigger Binding="{Binding Type}" Value="ScriptButton"><Setter Property="Visibility" Value="Collapsed"/></DataTrigger>
                                                                                                                    <DataTrigger Binding="{Binding Type}" Value="NodeBypass"><Setter Property="Visibility" Value="Collapsed"/></DataTrigger>
                                                                                                                </Style.Triggers>
                                                                                                            </Style>
                                                                                                        </ComboBox.Style>
                                                                                                    </ComboBox>
                                                                                                </Grid>
                                                                                            </StackPanel>
                                                                                        </Grid>
                                                                                        <StackPanel Grid.Row="1" Margin="0,5,0,0">
                                                                                            <StackPanel.Style><Style TargetType="StackPanel"><Setter Property="Visibility" Value="Collapsed"/><Style.Triggers><DataTrigger Binding="{Binding Type}" Value="ComboBox"><Setter Property="Visibility" Value="Visible"/></DataTrigger></Style.Triggers></Style></StackPanel.Style>
                                                                                            <TextBlock Text="{local:Translate UIConstructor_Field_Items}"/>
                                                                                            <TextBox Text="{Binding ComboBoxItems, Converter={StaticResource StringListConverter}, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="Wrap" MaxHeight="80"/>
                                                                                        </StackPanel>
                                                                                        <StackPanel Grid.Row="2" Margin="0,5,0,0">
                                                                                            <StackPanel.Style>
                                                                                                <Style TargetType="StackPanel">
                                                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                                                    <Style.Triggers>
                                                                                                        <DataTrigger Binding="{Binding Type}" Value="Model">
                                                                                                            <Setter Property="Visibility" Value="Visible"/>
                                                                                                        </DataTrigger>
                                                                                                    </Style.Triggers>
                                                                                                </Style>
                                                                                            </StackPanel.Style>
                                                                                            <TextBlock Text="{local:Translate UIConstructor_Field_ModelSubtype}"/>
                                                                                            <local:FilterableComboBox ItemsSource="{Binding DataContext.ModelSubTypes, RelativeSource={RelativeSource AncestorType=Window}}"
                                                                                                SelectedItem="{Binding ModelType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                                                PlaceholderText="{local:Translate UIConstructor_Field_SelectSubtype}"
                                                                                                Margin="0,2,0,0"/>
                                                                                        </StackPanel>
                                                                                        <StackPanel Grid.Row="2" Margin="0,5,0,0">
                                                                                            <StackPanel.Style>
                                                                                                <Style TargetType="StackPanel">
                                                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                                                    <Style.Triggers>
                                                                                                        <DataTrigger Binding="{Binding Type}" Value="ScriptButton">
                                                                                                            <Setter Property="Visibility" Value="Visible"/>
                                                                                                        </DataTrigger>
                                                                                                    </Style.Triggers>
                                                                                                </Style>
                                                                                            </StackPanel.Style>
                                                                                            <TextBlock Text="{local:Translate UIConstructor_ActionToExecute}"/>
                                                                                            <ComboBox x:Name="ActionComboBox" 
                                                                                                ItemsSource="{Binding DataContext.ActionNames, RelativeSource={RelativeSource AncestorType=Window}}"
                                                                                                SelectedValue="{Binding ActionName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                                                DisplayMemberPath="Name" 
                                                                                                SelectedValuePath="Name"
                                                                                                Margin="0,2,0,0" />
                                                                                        </StackPanel>
                                                                                        <StackPanel Grid.Row="2" Margin="0,5,0,0">
                                                                                            <StackPanel.Style>
                                                                                                <Style TargetType="StackPanel">
                                                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                                                    <Style.Triggers>
                                                                                                        <DataTrigger Binding="{Binding Type}" Value="NodeBypass">
                                                                                                            <Setter Property="Visibility" Value="Visible"/>
                                                                                                        </DataTrigger>
                                                                                                    </Style.Triggers>
                                                                                                </Style>
                                                                                            </StackPanel.Style>
                                                                                            <TextBlock Text="{local:Translate UIConstructor_NodeBypass_Header}"/>
                                                                                            <CheckBox Content="{local:Translate UIConstructor_NodeBypass_EnabledByDefault}" IsChecked="{Binding DefaultValue, Converter={StaticResource StringToBoolConverter}}" Margin="0,5,0,5"/>

                                                                                            <!-- Поиск и добавление нод -->
                                                                                            <local:FilterableComboBox 
                                                                                                PlaceholderText="{local:Translate UIConstructor_NodeBypass_SearchPlaceholder}"
                                                                                                Margin="0,0,0,5"
                                                                                                ItemSelectedCommand="{Binding DataContext.AddBypassNodeIdCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                                                                ItemSelectedCommandParameter="{Binding}"> <!-- The DataContext here is the WorkflowField -->
    
                                                                                                <local:FilterableComboBox.ItemsSource>
                                                                                                    <MultiBinding Converter="{StaticResource AvailableNodesConverter}">
                                                                                                        <Binding Path="DataContext.WorkflowNodes" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                                                                        <Binding Path="BypassNodeIds"/>
                                                                                                    </MultiBinding>
                                                                                                </local:FilterableComboBox.ItemsSource>

                                                                                                <local:FilterableComboBox.ItemTemplate>
                                                                                                    <DataTemplate DataType="{x:Type local:NodeInfo}">
                                                                                                        <StackPanel Orientation="Horizontal">
                                                                                                            <TextBlock Text="{Binding Title}" FontWeight="Bold"/>
                                                                                                            <TextBlock Text="{Binding Id, StringFormat=' ({0})'}" Foreground="{StaticResource TextSecondaryBrush}" Margin="5,0,0,0"/>
                                                                                                        </StackPanel>
                                                                                                    </DataTemplate>
                                                                                                </local:FilterableComboBox.ItemTemplate>
                                                                                            </local:FilterableComboBox>

                                                                                            <!-- Список уже добавленных нод -->
                                                                                            <ScrollViewer VerticalScrollBarVisibility="Auto" MaxHeight="100">
                                                                                                    <ItemsControl>
                                                                                                        <ItemsControl.ItemsSource>
                                                                                                            <MultiBinding Converter="{StaticResource NodeIdsToInfoConverter}">
                                                                                                                <Binding Path="BypassNodeIds" />
                                                                                                                <Binding Path="DataContext.WorkflowNodes" RelativeSource="{RelativeSource AncestorType=Window}" />
                                                                                                            </MultiBinding>
                                                                                                        </ItemsControl.ItemsSource>
                                                                                                        <ItemsControl.ItemTemplate>
                                                                                                            <DataTemplate DataType="{x:Type local:NodeInfo}">
                                                                                                                <!-- Made the border more compact by reducing padding and margin -->
                                                                                                                <Border Background="{StaticResource TertiaryBackground}" CornerRadius="3" Margin="0,1" Padding="8,2">
                                                                                                                    <Grid>
                                                                                                                        <Grid.ColumnDefinitions>
                                                                                                                            <ColumnDefinition Width="*"/>
                                                                                                                            <ColumnDefinition Width="Auto"/>
                                                                                                                        </Grid.ColumnDefinitions>

                                                                                                                        <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                                                                                                                            <TextBlock Text="{Binding Title}" FontWeight="SemiBold" TextTrimming="CharacterEllipsis"/>
                                                                                                                            <TextBlock Text="{Binding Id, StringFormat=' ({0})'}" Foreground="{StaticResource TextSecondaryBrush}" Margin="5,0,0,0"/>
                                                                                                                        </StackPanel>

                                                                                                                        <Button Grid.Column="1" Content="&#xE74D;" Style="{StaticResource IconButton}" Width="20" Height="20"
                                                                                                                                ToolTip="{local:Translate UIConstructor_NodeBypass_RemoveTooltip}">
                                                                                                                            <Button.Command>
                                                                                                                                <Binding Path="DataContext.RemoveBypassNodeIdCommand" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                                                                                            </Button.Command>
                                                                                                                            <Button.CommandParameter>
                                                                                                                                <MultiBinding Converter="{StaticResource MultiValueToArrayConverter}">
                                                                                                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=ItemsControl}"/>
                                                                                                                                    <Binding/>
                                                                                                                                </MultiBinding>
                                                                                                                            </Button.CommandParameter>
                                                                                                                        </Button>
                                                                                                                    </Grid>
                                                                                                                </Border>
                                                                                                            </DataTemplate>
                                                                                                        </ItemsControl.ItemTemplate>
                                                                                                    </ItemsControl>
                                                                                                </ScrollViewer>
                                                                                        </StackPanel>
                                                                                        
                                                                                        <StackPanel Grid.Row="2" Margin="0,5,0,0" Orientation="Horizontal">
                                                                                            <StackPanel.Style>
                                                                                                <Style TargetType="StackPanel">
                                                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                                                    <Style.Triggers>
                                                                                                        <DataTrigger Binding="{Binding Type}" Value="Markdown">
                                                                                                            <Setter Property="Visibility" Value="Visible"/>
                                                                                                        </DataTrigger>
                                                                                                    </Style.Triggers>
                                                                                                </Style>
                                                                                            </StackPanel.Style>
                                                                                            <TextBlock Text="Max Lines:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                                                                            <xctk:IntegerUpDown Value="{Binding MaxDisplayLines, UpdateSourceTrigger=PropertyChanged}" Minimum="1" Width="60"/>
                                                                                        </StackPanel>
                                                                                    </Grid>
                                                                                </Grid>
                                                                            </Border>
                                                                            
                                                                             <Border x:Name="DropIndicatorAfter" Height="2" Background="{StaticResource PrimaryAccentBrush}" CornerRadius="1" Margin="0,1" Visibility="Collapsed" IsHitTestVisible="False"/>
                                                                        </StackPanel>
                                                                    </DataTemplate>
                                                                </ItemsControl.ItemTemplate>
                                                            </ItemsControl>
                                                        </Grid>
                                                    </Border>
                                                </Expander>

                                                <Border x:Name="GroupDropIndicatorAfter" Height="3" Background="{StaticResource PrimaryAccentBrush}" CornerRadius="1.5" Margin="0,2" Visibility="Collapsed" IsHitTestVisible="False"/>
                                            </StackPanel>
                                            <!-- END OF CHANGES -->
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </DockPanel>
                    </Border>
                </Grid>
            </TabItem>
            
            <TabItem Header="{local:Translate UIConstructor_ScriptsHeader}">
                <Grid Margin="0,10,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" MinWidth="250"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="2*" MinWidth="400"/>
                    </Grid.ColumnDefinitions>
    
                    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Background="Transparent" />

                    <!-- Hooks Panel -->
                    <DockPanel Grid.Column="0" Margin="0,0,5,0">
                        <TextBlock DockPanel.Dock="Top" Text="{local:Translate UIConstructor_HooksHeader}" FontWeight="Bold" Margin="5"/>
                        <ComboBox DockPanel.Dock="Top" Margin="5"
                                  ItemsSource="{Binding AvailableHooks}"
                                  SelectedItem="{Binding SelectedHookName}"
                                  ToolTip="{local:Translate UIConstructor_HooksTooltip}"/>
                        <Border BorderBrush="{StaticResource TertiaryBackground}" BorderThickness="1" Padding="2" CornerRadius="3">
                            <avalonedit:TextEditor x:Name="HookScriptEditor" Document="{Binding SelectedHookScript, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   SyntaxHighlighting="{Binding PythonSyntaxHighlighting}" 
                                                   FontFamily="Consolas" FontSize="12"
                                                   ShowLineNumbers="True" Background="{StaticResource SecondaryBackground}"
                                                   Foreground="{StaticResource TextBrush}" BorderThickness="0"/>
                        </Border>
                    </DockPanel>

                    <!-- Actions Panel -->
                    <DockPanel Grid.Column="2" Margin="5,0,0,0">
                        <TextBlock DockPanel.Dock="Top" Text="{local:Translate UIConstructor_ActionsHeader}" FontWeight="Bold" Margin="5"/>
                        <Border DockPanel.Dock="Top" Margin="5,0,5,5" Padding="5" Background="{StaticResource SecondaryBackground}" CornerRadius="3" BorderBrush="{StaticResource TertiaryBackground}" BorderThickness="1">
                            <StackPanel Orientation="Horizontal">
                                <Button Content="{local:Translate UIConstructor_AddAction}" Command="{Binding AddActionCommand}"/>
                                <Button Content="{local:Translate UIConstructor_RemoveAction}" Command="{Binding RemoveActionCommand}" Margin="5,0,0,0"/>
                                <Button Content="▶" 
                                        Command="{Binding TestScriptCommand}" 
                                        ToolTip="{local:Translate UIConstructor_TestScriptTooltip}"
                                        Margin="10,0,0,0"
                                        Style="{StaticResource IconButton}"
                                        Width="30" Height="30"
                                        Background="{StaticResource SuccessBrush}"
                                        FontFamily="Segoe UI Symbol"/>
                            </StackPanel>
                        </Border>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="150"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <!-- ========================================================== -->
                            <!--     НАЧАЛО ИЗМЕНЕНИЙ: ListBox с поддержкой переименования -->
                            <!-- ========================================================== -->
                            <ListBox Grid.Column="0" Margin="0,0,5,0"
                                     ItemsSource="{Binding ActionNames}"
                                     SelectedItem="{Binding SelectedActionName, Mode=TwoWay}"
                                     Background="{StaticResource SecondaryBackground}"
                                     BorderBrush="{StaticResource TertiaryBackground}"
                                     BorderThickness="1">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="Padding" Value="5,3"/>
                                        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                        <EventSetter Event="MouseDoubleClick" Handler="ActionItem_MouseDoubleClick"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True"><Setter Property="Background" Value="{StaticResource TertiaryBackground}"/></Trigger>
                                            <Trigger Property="IsSelected" Value="True"><Setter Property="Background" Value="{StaticResource PrimaryAccentBrush}"/></Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type local:ActionNameViewModel}">
                                        <Grid>
                                            <!-- ========================================================== -->
                                            <!--     НАЧАЛО ИСПРАВЛЕНИЙ: Правильные привязки              -->
                                            <!-- ========================================================== -->
                                            <TextBlock Text="{Binding Name}" 
                                                       Visibility="{Binding IsRenaming, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert}"/>
                                            <TextBox Text="{Binding Name, UpdateSourceTrigger=Explicit}" 
                                                     Style="{StaticResource InlineEditTextBox}"
                                                     Visibility="{Binding IsRenaming, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            <!-- ========================================================== -->
                                            <!--     КОНЕЦ ИСПРАВЛЕНИЙ                                        -->
                                            <!-- ========================================================== -->
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <!-- ========================================================== -->
                            <!--     КОНЕЦ ИЗМЕНЕНИЙ                                        -->
                            <!-- ========================================================== -->

                            <avalonedit:TextEditor x:Name="ActionScriptEditor" Grid.Column="1"
                                                   Document="{Binding SelectedActionScript, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   SyntaxHighlighting="{Binding PythonSyntaxHighlighting}"
                                                   FontFamily="Consolas"
                                                   FontSize="12"
                                                   ShowLineNumbers="True"
                                                   Background="{StaticResource SecondaryBackground}"
                                                   Foreground="{StaticResource TextBrush}"
                                                   BorderBrush="{StaticResource TertiaryBackground}"
                                                   BorderThickness="1"
                                                   Padding="5"/>
                        </Grid>
                    </DockPanel>
                </Grid>
            </TabItem>
        </TabControl>
        
        <Border Grid.Row="1" DockPanel.Dock="Top" Background="{StaticResource TertiaryBackground}" CornerRadius="3" Padding="8" Margin="0,10,0,0">
            <Grid>
                <Grid.ColumnDefinitions><ColumnDefinition Width="*"/><ColumnDefinition Width="Auto"/></Grid.ColumnDefinitions>
                <TextBox Text="{Binding NewWorkflowName, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="10,0,0,0">
                    <Button Command="{Binding SaveWorkflowCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" ToolTip="{local:Translate UIConstructor_SaveTooltip}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="&#xE74E;" FontFamily="Segoe MDL2 Assets" Margin="0,0,5,0"/>
                            <TextBlock Text="{local:Translate UIConstructor_Save}"/>
                        </StackPanel>
                    </Button>
                    <Button Command="{Binding ExportApiWorkflowCommand}" Margin="5,0,0,0" ToolTip="{local:Translate UIConstructor_ExportTooltip}"><StackPanel Orientation="Horizontal"><TextBlock Text="&#xE8AB;" FontFamily="Segoe MDL2 Assets" Margin="0,0,5,0"/><TextBlock Text="{local:Translate UIConstructor_Export}"/></StackPanel></Button>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Window>