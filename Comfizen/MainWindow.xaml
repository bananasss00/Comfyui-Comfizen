<Window x:Class="Comfizen.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:Comfizen"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Comfizen v1.2" Height="600" Width="1000"
        WindowStartupLocation="CenterScreen"
        MinWidth="800" MinHeight="500"
        Background="{StaticResource PrimaryBackground}"
        Foreground="{StaticResource TextBrush}"
        Style="{StaticResource CustomWindowStyle}"
        KeyDown="MainWindow_OnKeyDown"
        AllowDrop="True"
        DragOver="Window_DragOver"
        Drop="Window_Drop">
    <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <DataTemplate x:Key="WorkflowItemTemplate" DataType="{x:Type sys:String}">
            <TextBlock Text="{Binding Converter={StaticResource FileNameTrimmerConverter}}" Padding="5,3"/>
        </DataTemplate>

        <DataTemplate x:Key="WorkflowHeaderTemplate" DataType="{x:Type local:WorkflowListHeader}">
            <TextBlock Text="{Binding Title}" FontWeight="Bold" Margin="2,5,2,2" Foreground="{StaticResource TextSecondaryBrush}"/>
        </DataTemplate>

        <local:WorkflowTemplateSelector x:Key="WorkflowTemplateSelector"
                                        WorkflowTemplate="{StaticResource WorkflowItemTemplate}"
                                        HeaderTemplate="{StaticResource WorkflowHeaderTemplate}"/>
        
        <!-- START OF NEW STYLE FOR WORKFLOW TABS -->
        <Style x:Key="WorkflowTabControlStyle" TargetType="TabControl">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="{Binding Items.Count, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TabCountToHeaderHeightConverter}}"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <!-- This Border acts as the "tab bar" background -->
                            <Border Grid.Row="0" Background="{StaticResource TertiaryBackground}" CornerRadius="3" Padding="5,5,5,0">
                                <TabPanel IsItemsHost="True" Background="Transparent"/>
                            </Border>
                            <Border Grid.Row="1" Background="Transparent" BorderThickness="0">
                                <ContentPresenter ContentSource="SelectedContent"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="WorkflowTabItemStyle" TargetType="TabItem">
            <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <!-- This Border is the clickable tab itself -->
                        <Border x:Name="Border" 
                                Background="{TemplateBinding Background}" 
                                BorderThickness="0" 
                                CornerRadius="3,3,0,0" 
                                Margin="0,0,2,0"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Style for the selected tab -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                <!-- The background matches the content area, making it look connected -->
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SecondaryBackground}"/>
                            </Trigger>
                            <!-- Style for hovering over an unselected tab -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PrimaryBackground}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- END OF NEW STYLE -->
        
        <ControlTemplate x:Key="CustomContextMenuTemplate" TargetType="ContextMenu">
        <Border x:Name="Border" 
                Background="{StaticResource SecondaryBackground}"
                BorderBrush="{StaticResource TertiaryBackground}"
                BorderThickness="1">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource TertiaryBackground}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="#454545"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--
      ОБНОВЛЕННЫЙ стиль для ContextMenu.
      Теперь он использует наш новый ControlTemplate.
    -->
    <Style x:Key="AppContextMenuStyle" TargetType="ContextMenu">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Template" Value="{StaticResource CustomContextMenuTemplate}"/>
    </Style>

    <!--
      ОБНОВЛЕННЫЙ стиль для MenuItem, который теперь будет работать корректно
      внутри нашего нового ContextMenu.
    -->
    <Style TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Padding" Value="8,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border x:Name="Border" 
                            Background="Transparent"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter ContentSource="Header" 
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PrimaryAccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
          
    </Window.Resources>

    <Grid>
            
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition x:Name="ConsoleRow" Height="200">
                <RowDefinition.Style>
                    <Style TargetType="RowDefinition">
                        <Setter Property="MaxHeight" Value="0"/>
                        <Setter Property="MinHeight" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsConsoleVisible}" Value="True">
                                <Setter Property="MaxHeight" Value="10000"/> 
                                <Setter Property="MinHeight" Value="40"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RowDefinition.Style>
            </RowDefinition>
        </Grid.RowDefinitions>
        
        <Border Grid.Row="0" Background="{StaticResource SecondaryBackground}" Margin="5,5,5,0" CornerRadius="5,5,0,0">
            <DockPanel Margin="8">
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Margin="10,0,0,0">
                    <Button Content="&#xE70F;" Style="{StaticResource IconButton}" Command="{Binding EditWorkflowCommand}" ToolTip="{local:Translate Toolbar_EditWorkflow}"/>
                    <Button Content="&#xE710;" Style="{StaticResource IconButton}" Command="{Binding OpenConstructorCommand}" Margin="5,0,0,0" ToolTip="{local:Translate Toolbar_NewWorkflow}"/>
                    <Button Content="&#xE74D;" Style="{StaticResource IconButton}" Command="{Binding DeleteWorkflowCommand}" Margin="5,0,0,0" ToolTip="{local:Translate Toolbar_DeleteWorkflow}"/>
                    <Button Content="&#xE7A7;" Style="{StaticResource IconButton}" Command="{Binding ClearSessionCommand}" Margin="5,0,0,0" ToolTip="{local:Translate Toolbar_ResetSession}"/>
                    <Button Content="&#xE738;" Style="{StaticResource IconButton}" Command="{Binding ClearBlockedNodesCommand}" Margin="5,0,0,0" ToolTip="{local:Translate Toolbar_ClearBlockedNodes}"/>
                    <Button Content="&#xE74E;" Style="{StaticResource IconButton}" Command="{Binding SaveChangesToWorkflowCommand}" Margin="5,0,0,0" ToolTip="{local:Translate Toolbar_SaveChanges}"/>
                    <Button Content="&#xE78C;" Style="{StaticResource IconButton}" Command="{Binding ExportCurrentStateCommand}" Margin="5,0,0,0" ToolTip="{local:Translate Toolbar_ExportState}"/>
                    <Button Content="&#xE72C;" Style="{StaticResource IconButton}" Command="{Binding RefreshModelsCommand}" Margin="5,0,0,0" ToolTip="{local:Translate Toolbar_RefreshModels}"/>
                    <Button Content="&#xE75F;" Style="{StaticResource IconButton}" Command="{Binding ToggleConsoleCommand}" Margin="5,0,0,0" ToolTip="{local:Translate Toolbar_ToggleConsole}"/>
                    <Button Content="&#xE713;" Style="{StaticResource IconButton}" Command="{Binding OpenSettingsCommand}" Margin="5,0,0,0" ToolTip="{local:Translate Toolbar_Settings}"/>
                </StackPanel>

                <local:FilterableComboBox
                    ItemsSource="{Binding WorkflowDisplayList}"
                    SelectedItem="{Binding SelectedWorkflow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource FileNameTrimmerConverter}}"
                    SearchFilter="{Binding WorkflowSearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ItemSelected="FilterableComboBox_ItemSelected"
                    PlaceholderText="{local:Translate FilterableComboBox_Placeholder}"
                    ItemTemplateSelector="{StaticResource WorkflowTemplateSelector}"/>
            </DockPanel>
        </Border>
        
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Row 0: The TabControl for the tab headers ONLY -->
            <TabControl Grid.Row="0" ItemsSource="{Binding OpenTabs}" SelectedItem="{Binding SelectedTab, Mode=TwoWay}" Margin="5,0,5,0" Background="Transparent" BorderThickness="0">
                <TabControl.ContentTemplate>
                    <DataTemplate />
                </TabControl.ContentTemplate>
                <TabControl.Style>
                    <Style TargetType="TabControl">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding OpenTabs.Count}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabControl.Style>
                <TabControl.ItemContainerStyle>
                    <Style TargetType="TabItem">
                        <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
                        <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
                        <Setter Property="Padding" Value="8,5"/>
                        <Setter Property="AllowDrop" Value="True"/>
                        <EventSetter Event="DragOver" Handler="TabItem_DragOver"/>
                        <EventSetter Event="DragEnter" Handler="TabItem_DragEnter"/>
                        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="TabItem_PreviewMouseLeftButtonDown"/>
                        <EventSetter Event="Drop" Handler="TabItem_Drop"/>
                        <EventSetter Event="MouseMove" Handler="TabItem_MouseMove"/>
                        <EventSetter Event="PreviewMouseUp" Handler="TabItem_PreviewMouseUp"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Border x:Name="Border" BorderThickness="0,0,0,2" BorderBrush="Transparent" Background="{TemplateBinding Background}" Margin="0,0,2,0">
                                        <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryAccentBrush}"/>
                                            <Setter Property="Background" Value="{StaticResource PrimaryBackground}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.ItemContainerStyle>
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" ToolTip="{Binding RelativePathTooltip}">
                            <TextBlock Text="{Binding Header}" VerticalAlignment="Center" />
                            <Button Content="&#xE711;" FontFamily="Segoe MDL2 Assets"
                                    Command="{Binding DataContext.CloseTabCommand, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                    CommandParameter="{Binding}"
                                    Style="{StaticResource IconButton}" Width="20" Height="20" Margin="8,0,0,0"/>
                        </StackPanel>
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </TabControl>

            <!-- Row 1: The main content area with three columns -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1.2*" MinWidth="350"/>
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="2*" MinWidth="400" />
                </Grid.ColumnDefinitions>

                <!-- Column 0: Workflow Controls -->
                <Border Grid.Column="0" Background="{StaticResource SecondaryBackground}" CornerRadius="0,0,0,5" Margin="5,0,0,5">
                    <ScrollViewer x:Name="ControlsScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled"
                                  Visibility="{Binding SelectedTab, Converter={StaticResource StringToIsNotNullOrEmptyConverter}}"
                                  PreviewMouseWheel="ControlsScrollViewer_PreviewMouseWheel">
                        <StackPanel>
                            <StackPanel.Resources>
                                <DataTemplate DataType="{x:Type local:GlobalSettingsViewModel}">
                                    <Expander Header="{Binding Header}" IsExpanded="{Binding IsExpanded, Mode=TwoWay}" BorderBrush="Orange" Margin="5">
                                        <Grid Margin="5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="0,0,10,0" VerticalAlignment="Center">
                                                <TextBlock Text="{local:Translate Tab_WildcardSeed}"/>
                                                <TextBlock Text="💡" VerticalAlignment="Center" Margin="5,0,0,0" Foreground="{StaticResource TextSecondaryBrush}" />
                                            </StackPanel>
                                            <Grid Grid.Column="1">
                                                <TextBox Text="{Binding WildcardSeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="5,5,28,5" />
                                                <ToggleButton IsChecked="{Binding IsSeedLocked, Mode=TwoWay}" Style="{StaticResource LockToggleButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,4,0"/>
                                            </Grid>
                                        </Grid>
                                    </Expander>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type local:GlobalPresetsViewModel}">
                                    <Expander Header="{Binding Header}" IsExpanded="{Binding IsExpanded, Mode=TwoWay}" BorderBrush="#4CAF50" Margin="5">
                                        <Grid Margin="5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="{local:Translate GlobalPresets_Label}" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                            <local:FilterableComboBox Grid.Column="1"
                                                                      ItemsSource="{Binding GlobalPresetNames}"
                                                                      SelectedItem="{Binding SelectedGlobalPreset, Mode=TwoWay}"
                                                                      PlaceholderText="{local:Translate Presets_LoadPlaceholder}">
                                                <local:FilterableComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding}" Padding="2"/>
                                                    </DataTemplate>
                                                </local:FilterableComboBox.ItemTemplate>
                                                <local:FilterableComboBox.Style>
                                                    <Style TargetType="local:FilterableComboBox">
                                                        <Setter Property="IsEnabled" Value="True"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding GlobalPresetNames.Count}" Value="0">
                                                                <Setter Property="IsEnabled" Value="False"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </local:FilterableComboBox.Style>
                                            </local:FilterableComboBox>
                                        </Grid>
                                    </Expander>
                                </DataTemplate>
                            </StackPanel.Resources>
                            
                            <ContentControl Content="{Binding SelectedTab.WorkflowInputsController.GlobalSettings}" Visibility="{Binding SelectedTab.WorkflowInputsController.GlobalSettings.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <ContentControl Content="{Binding SelectedTab.WorkflowInputsController.GlobalPresets}" Visibility="{Binding SelectedTab.WorkflowInputsController.GlobalPresets.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            
                            <!-- START OF REPLACEMENT: Use a TabControl for workflow tabs -->
                            <TabControl x:Name="WorkflowTabsControl" 
                                        ItemsSource="{Binding SelectedTab.WorkflowInputsController.TabLayoouts}" 
                                        SelectedItem="{Binding SelectedTab.WorkflowInputsController.SelectedTabLayout, Mode=TwoWay}"
                                        Margin="5,0,5,5"
                                        Style="{StaticResource WorkflowTabControlStyle}"
                                        ItemContainerStyle="{StaticResource WorkflowTabItemStyle}">
                                <TabControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Header}" />
                                    </DataTemplate>
                                </TabControl.ItemTemplate>
                                <TabControl.ContentTemplate>
                                    <DataTemplate>
                                        <ItemsControl ItemsSource="{Binding Groups}" Margin="0,5,0,0">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate DataType="{x:Type local:WorkflowGroupViewModel}">
                                                    <Expander Header="{Binding Name}" IsExpanded="{Binding IsExpanded, Mode=TwoWay}" Margin="5">
                                            <Expander.Template>
                                                <ControlTemplate TargetType="Expander">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Background="Transparent">
                                                        <DockPanel>
                                                            <ToggleButton DockPanel.Dock="Top" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}">
                                                                <ToggleButton.Template>
                                                                    <ControlTemplate TargetType="ToggleButton">
                                                                        <Grid>
                                                                            <Border Background="{StaticResource TertiaryBackground}" CornerRadius="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType=Expander}, Converter={StaticResource ExpanderCornerRadiusConverter}}" />
                                                                            <Border CornerRadius="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType=Expander}, Converter={StaticResource ExpanderCornerRadiusConverter}}" Background="{Binding DataContext.HighlightColor, RelativeSource={RelativeSource AncestorType=Expander}, Converter={StaticResource HexToBrushConverter}}">
                                                                                <Border.Style>
                                                                                    <Style TargetType="Border">
                                                                                        <Setter Property="Opacity" Value="0.2" />
                                                                                        <Style.Triggers>
                                                                                            <DataTrigger Binding="{Binding DataContext.HighlightColor, RelativeSource={RelativeSource AncestorType=Expander}}" Value="{x:Null}">
                                                                                                <Setter Property="Opacity" Value="0" />
                                                                                            </DataTrigger>
                                                                                        </Style.Triggers>
                                                                                    </Style>
                                                                                </Border.Style>
                                                                            </Border>
                                                                            <Border Padding="8">
                                                                                <Grid>
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                        <ColumnDefinition Width="*"/>
                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                    </Grid.ColumnDefinitions>
                                                                                    
                                                                                    <!-- Arrow and Group Name -->
                                                                                    <StackPanel Grid.Column="0" Orientation="Horizontal">
                                                                                        <TextBlock x:Name="Arrow" Text="▶" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                                                                        <ContentPresenter Grid.Column="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                                                                                    </StackPanel>
                                                                                    
                                                                                    <!-- START OF CHANGES: Preset Controls -->
                                                                                    <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right"
                                                                                                Visibility="{Binding Fields.Count, Converter={StaticResource TaskCountToVisibilityConverter}}">
                                                                                        
                                                                                            
                                                                                        <local:FilterableComboBox Margin="10,0,5,0" VerticalAlignment="Center"
                                                                                                                  ItemsSource="{Binding PresetNames}"
                                                                                                                  SelectedItem="{Binding SelectedPresetName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                                                                  MinWidth="120"
                                                                                                                  Visibility="{Binding Presets.Count, Converter={StaticResource CountToVisibilityConverter}}"
                                                                                                                  PlaceholderText="{local:Translate Presets_LoadPlaceholder}">
                                                                                            <local:FilterableComboBox.ItemTemplate>
                                                                                                <DataTemplate>
                                                                                                    <!-- Вот правильное решение с использованием Grid -->
                                                                                                    <Grid>
                                                                                                        <Grid.ColumnDefinitions>
                                                                                                            <ColumnDefinition Width="*" />
                                                                                                            <ColumnDefinition Width="Auto" />
                                                                                                        </Grid.ColumnDefinitions>
                                                                                                        
                                                                                                        <TextBlock Grid.Column="0" Text="{Binding}" 
                                                                                                                   VerticalAlignment="Center" 
                                                                                                                   TextTrimming="CharacterEllipsis" 
                                                                                                                   Padding="5,3"/>
                                                                                                        
                                                                                                        <Button Grid.Column="1" Content="✕"
                                                                                                                Margin="5,0"
                                                                                                                Command="{Binding DataContext.DeletePresetCommand, RelativeSource={RelativeSource AncestorType=Expander}}"
                                                                                                                CommandParameter="{Binding}"
                                                                                                                ToolTip="{local:Translate Presets_DeleteTooltip}">
                                                                                                            <Button.Style>
                                                                                                                <Style TargetType="Button" BasedOn="{StaticResource OverlayIconButton}">
                                                                                                                    <Setter Property="Opacity" Value="0" />
                                                                                                                    <Setter Property="IsHitTestVisible" Value="False" />
                                                                                                                    <Style.Triggers>
                                                                                                                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True">
                                                                                                                            <Setter Property="Opacity" Value="1" />
                                                                                                                            <Setter Property="IsHitTestVisible" Value="True" />
                                                                                                                        </DataTrigger>
                                                                                                                    </Style.Triggers>
                                                                                                                </Style>
                                                                                                            </Button.Style>
                                                                                                        </Button>
                                                                                                    </Grid>
                                                                                                </DataTemplate>
                                                                                            </local:FilterableComboBox.ItemTemplate>
                                                                                        </local:FilterableComboBox>
                                                                                        
                                                                                        <!-- START OF CHANGE: Replace settings button with a Save button -->
                                                                                        <Button Content="&#xE74E;" FontFamily="Segoe MDL2 Assets" 
                                                                                            Style="{StaticResource IconButton}" Width="24" Height="24"
                                                                                            Command="{Binding OpenSavePresetPopupCommand}"
                                                                                            ToolTip="{local:Translate Presets_SaveButton}"/>
                                                                                        <!-- END OF CHANGE -->
                                                                                    </StackPanel>
                                                                                </Grid>
                                                                            </Border>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                <Setter TargetName="Arrow" Property="Text" Value="▼"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </ToggleButton.Template>
                                                            </ToggleButton>
                                                            
                                                            <!-- START OF CHANGE: Add the Popup for saving presets -->
                                                            <Popup IsOpen="{Binding IsSavePresetPopupOpen, Mode=TwoWay}" 
                                                                   StaysOpen="False" 
                                                                   Placement="Bottom" 
                                                                   PlacementTarget="{Binding ElementName=HeaderToggleButton}"
                                                                   AllowsTransparency="True">
                                                                <Border Background="{StaticResource SecondaryBackground}" BorderBrush="{StaticResource TertiaryBackground}" BorderThickness="1" CornerRadius="3" Padding="10" Margin="0,2,0,0">
                                                                    <StackPanel>
                                                                        <TextBlock Text="{local:Translate Presets_SaveCurrentState}" FontWeight="Bold" Margin="0,0,0,5"/>
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="*"/>
                                                                                <ColumnDefinition Width="Auto"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <TextBox Grid.Column="0" MinWidth="150"
                                                                                     Text="{Binding NewPresetName, UpdateSourceTrigger=PropertyChanged}" />
                                                                            <Button Grid.Column="1" Content="{local:Translate Presets_SaveButton}" Margin="5,0,0,0"
                                                                                    Command="{Binding SavePresetCommand}"/>
                                                                        </Grid>
                                                                    </StackPanel>
                                                                </Border>
                                                            </Popup>
                    
                                                            <Grid x:Name="ContentSite" DockPanel.Dock="Bottom" Visibility="Collapsed">
                                                                 <Border Opacity="0.2" Background="{Binding DataContext.HighlightColor, RelativeSource={RelativeSource AncestorType=Expander}, Converter={StaticResource HexToBrushConverter}}"/>
                                                                 <ContentPresenter ContentSource="Content" Margin="8"/>
                                                            </Grid>
                                                        </DockPanel>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsExpanded" Value="True">
                                                            <Setter TargetName="ContentSite" Property="Visibility" Value="Visible"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Expander.Template>
                                            <ItemsControl ItemsSource="{Binding Fields}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <DataTemplate.Resources>
                                                            <ControlTemplate x:Key="NormalFieldLayoutTemplate" TargetType="ContentControl">
                                                                <Grid Margin="0,4">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                        <ColumnDefinition Width="Auto" MinWidth="120"/>
                                                                        <ColumnDefinition Width="*" />
                                                                    </Grid.ColumnDefinitions>
                                                                    
                                                                    <Border Grid.Column="0" Width="3" CornerRadius="1.5" HorizontalAlignment="Left">
                                                                        <Border.Background>
                                                                            <MultiBinding Converter="{StaticResource PriorityColorToBrushConverter}">
                                                                                <Binding Path="HighlightColor"/>
                                                                                <Binding Path="DataContext.HighlightColor" RelativeSource="{RelativeSource AncestorType=Expander}"/>
                                                                            </MultiBinding>
                                                                        </Border.Background>
                                                                    </Border>
                                                                    
                                                                    <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="10,0,10,0" VerticalAlignment="Center">
                                                                        <TextBlock Text="{Binding Name}" ToolTip="{Binding Path}"/>
                                                                        <TextBlock Margin="5,0,0,0" Foreground="{StaticResource TextSecondaryBrush}" VerticalAlignment="Center">
                                                                            <TextBlock.Style>
                                                                                <Style TargetType="TextBlock">
                                                                                    <Style.Triggers>
                                                                                        <DataTrigger Binding="{Binding Type}" Value="Seed"><Setter Property="Text" Value="🎲"/></DataTrigger>
                                                                                        <DataTrigger Binding="{Binding Type}" Value="WildcardSupportPrompt"><Setter Property="Text" Value="💡"/></DataTrigger>
                                                                                    </Style.Triggers>
                                                                                </Style>
                                                                            </TextBlock.Style>
                                                                        </TextBlock>
                                                                    </StackPanel>
                                                                    <ContentPresenter Grid.Column="2" Content="{Binding}" ContentTemplateSelector="{StaticResource FieldTemplateSelector}" />
                                                                </Grid>
                                                            </ControlTemplate>
                                                            <ControlTemplate x:Key="InpaintLayoutTemplate" TargetType="ContentControl">
                                                                <ContentPresenter Content="{Binding}" ContentTemplateSelector="{StaticResource FieldTemplateSelector}" />
                                                            </ControlTemplate>
                                                            <ControlTemplate x:Key="FullWidthLayoutTemplate" TargetType="ContentControl">
                                                                 <ContentPresenter Content="{Binding}" ContentTemplateSelector="{StaticResource FieldTemplateSelector}" Margin="0,4" />
                                                            </ControlTemplate>
                                                        </DataTemplate.Resources>
                                                        <ContentControl Content="{Binding}">
                                                            <ContentControl.Style>
                                                                <Style TargetType="ContentControl">
                                                                    <Setter Property="Template" Value="{StaticResource NormalFieldLayoutTemplate}"/>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Converter={StaticResource IsInpaintViewModelConverter}}" Value="True">
                                                                            <Setter Property="Template" Value="{StaticResource InpaintLayoutTemplate}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding Converter={StaticResource IsMarkdownViewModelConverter}}" Value="True">
                                                                            <Setter Property="Template" Value="{StaticResource FullWidthLayoutTemplate}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding Type}" Value="ScriptButton">
                                                                            <Setter Property="Template" Value="{StaticResource FullWidthLayoutTemplate}"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </ContentControl.Style>
                                                        </ContentControl>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </Expander>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </DataTemplate>
                                </TabControl.ContentTemplate>
                            </TabControl>
                            <!-- END OF REPLACEMENT -->
                            
                        </StackPanel>
                    </ScrollViewer>
                </Border>
                
                <GridSplitter Grid.Column="1" 
                              Style="{StaticResource VerticalGridSplitterStyle}"
                              ResizeBehavior="PreviousAndNext"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Stretch"/>
            
                <Grid Grid.Column="2">
                    <Border Background="{StaticResource SecondaryBackground}" CornerRadius="0,0,5,0" Margin="0,0,5,5">
                        <DockPanel>
                            <Border DockPanel.Dock="Top" Padding="8" BorderBrush="{StaticResource TertiaryBackground}" BorderThickness="0,0,0,1">
                                <Grid>
                                    <Grid.ColumnDefinitions><ColumnDefinition Width="*"/><ColumnDefinition Width="Auto"/><ColumnDefinition Width="Auto"/></Grid.ColumnDefinitions>
                                    <TextBox Text="{Binding ImageProcessing.SearchFilterText, UpdateSourceTrigger=PropertyChanged}" Width="120" HorizontalAlignment="Left" ToolTip="{local:Translate Tab_GallerySearchPlaceholder}"/>
                                    <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="10,0,0,0" VerticalAlignment="Center">
                                        <TextBlock Text="{local:Translate Tab_GalleryFilterType}" Margin="0,0,5,0"/>
                                        <RadioButton Content="{local:Translate Tab_GalleryFilterAll}" GroupName="FileType" IsChecked="{Binding ImageProcessing.SelectedFileTypeFilter, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:FileTypeFilter.All}}"/>
                                        <RadioButton Content="{local:Translate Tab_GalleryFilterImages}" GroupName="FileType" Margin="5,0,0,0" IsChecked="{Binding ImageProcessing.SelectedFileTypeFilter, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:FileTypeFilter.Images}}"/>
                                        <RadioButton Content="{local:Translate Tab_GalleryFilterVideo}" GroupName="FileType" Margin="5,0,0,0" IsChecked="{Binding ImageProcessing.SelectedFileTypeFilter, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:FileTypeFilter.Video}}"/>
                                    </StackPanel>
                                    <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="10,0,0,0" VerticalAlignment="Center">
                                        <TextBlock Text="{local:Translate Tab_GallerySort}" Margin="0,0,5,0"/>
                                        <ComboBox ItemsSource="{Binding Source={local:EnumBindingSource {x:Type local:SortOption}}}" SelectedItem="{Binding ImageProcessing.SelectedSortOption}" Width="120"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <Border DockPanel.Dock="Bottom" Padding="8" BorderBrush="{StaticResource TertiaryBackground}" BorderThickness="0,1,0,0">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{local:Translate Tab_GalleryThumbnailSize}" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                    <Slider x:Name="ThumbnailSizeSlider" Minimum="64" Maximum="256" Value="128" Width="100"/>
                                </StackPanel>
                            </Border>
                            <Grid>
                            <ListView x:Name="lvOutputs" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                      ItemsSource="{Binding ImageProcessing.FilteredImageOutputs}"
                                      Background="Transparent" BorderThickness="0"
                                      SelectionMode="Extended"
                                      SelectionChanged="LvOutputs_SelectionChanged">
                                <ListView.ItemsPanel><ItemsPanelTemplate><WrapPanel Orientation="Horizontal" Margin="5"/></ItemsPanelTemplate></ListView.ItemsPanel>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Border x:Name="ItemBorder" CornerRadius="3" Margin="5" BorderBrush="{StaticResource TertiaryBackground}" BorderThickness="1"
                                                Width="{Binding ElementName=ThumbnailSizeSlider, Path=Value}"
                                                Height="{Binding ElementName=ThumbnailSizeSlider, Path=Value}">
                                            <Grid>
                                                <Border Background="Transparent"/>
                                                <Image x:Name="ImgDisplay" Source="{Binding Image}" Visibility="Visible" Stretch="Uniform" />
                                                <MediaElement x:Name="VidDisplay" Visibility="Collapsed"
                                                              LoadedBehavior="Manual" UnloadedBehavior="Stop" IsMuted="True"
                                                              Loaded="MediaElement_Loaded"
                                                              Unloaded="MediaElement_Unloaded"
                                                              MediaEnded="MediaElement_MediaEnded" Stretch="Uniform"/>
                                                <Border x:Name="NameOverlay" VerticalAlignment="Bottom" Background="#B22D2D30" Padding="5,2" CornerRadius="0,0,2,2" Opacity="0" IsHitTestVisible="False">
                                                    <Border.Style><Style TargetType="Border"><Style.Triggers><DataTrigger Binding="{Binding IsMouseOver, ElementName=ItemBorder}" Value="True"><DataTrigger.EnterActions><BeginStoryboard><Storyboard><DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/></Storyboard></BeginStoryboard></DataTrigger.EnterActions><DataTrigger.ExitActions><BeginStoryboard><Storyboard><DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3"/></Storyboard></BeginStoryboard></DataTrigger.ExitActions></DataTrigger></Style.Triggers></Style></Border.Style>
                                                    <TextBlock Text="{Binding FileName}" Foreground="White" TextTrimming="CharacterEllipsis"/>
                                                </Border>
                                                <Button x:Name="DeleteButton" Content="&#xE74D;" Style="{StaticResource IconButton}"
                                                        HorizontalAlignment="Right" VerticalAlignment="Top"
                                                        Width="24" Height="24" Margin="2"
                                                        ToolTip="{local:Translate Tab_DeleteFile}"
                                                        Command="{Binding DataContext.ImageProcessing.DeleteImageCommand, ElementName=lvOutputs}"
                                                        CommandParameter="{Binding}"
                                                        Visibility="Collapsed"/>
                                            </Grid>
                                        </Border>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Type}" Value="Video"><Setter TargetName="VidDisplay" Property="Visibility" Value="Visible"/><Setter TargetName="ImgDisplay" Property="Visibility" Value="Collapsed"/></DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=ItemBorder}" Value="True"><Setter TargetName="DeleteButton" Property="Visibility" Value="Visible"/></DataTrigger>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}" Value="True">
                                                <Setter TargetName="ItemBorder" Property="BorderBrush" Value="{StaticResource PrimaryAccentBrush}"/>
                                                <Setter TargetName="ItemBorder" Property="BorderThickness" Value="2"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                        <Setter Property="Template"><Setter.Value><ControlTemplate TargetType="ListViewItem"><ContentPresenter/></ControlTemplate></Setter.Value></Setter>
                                        <EventSetter Event="MouseLeftButtonUp" Handler="ListViewItem_MouseLeftButtonUp"/>
                                        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListViewItem_PreviewMouseLeftButtonDown"/>
                                        <EventSetter Event="MouseMove" Handler="ListViewItem_MouseMove"/>
                                        
                                        <Setter Property="Tag" Value="{Binding DataContext, ElementName=lvOutputs}"/>
                                        
                                            
                                            
                                        <Setter Property="ContextMenu">
                                            <Setter.Value>
                                                <ContextMenu Style="{StaticResource AppContextMenuStyle}">
                                                    <MenuItem Header="{local:Translate ContextMenu_BlockNode}"
                                                              Command="{Binding PlacementTarget.Tag.BlockNodeCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                              CommandParameter="{Binding}"/>
                                                </ContextMenu>
                                            </Setter.Value>
                                        </Setter>




                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>
                            
                            <Border CornerRadius="5" Background="#DD3F3F46" Padding="10" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,10,0">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                        <TextBlock Text="🎲" FontSize="14" VerticalAlignment="Center" Margin="0,0,5,0" ToolTip="{local:Translate Tab_SeedControl}"/>
                                        <!-- This still binds to the selected tab's controller, which is correct -->
                                        <ComboBox x:Name="SeedControlComboBox" ItemsSource="{Binding SeedControlEnumValues}" SelectedItem="{Binding SelectedTab.WorkflowInputsController.SelectedSeedControl}" MinWidth="100"/>
                                    </StackPanel>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Border Grid.Column="0" BorderBrush="{StaticResource TertiaryBackground}" BorderThickness="1" CornerRadius="3" Height="30">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <Button Grid.Column="0"
                                                        Content="{local:Translate Tab_Queue}"
                                                        Background="{StaticResource SuccessBrush}"
                                                        Command="{Binding QueueCommand}"
                                                        BorderThickness="0"
                                                        Padding="10,0">
                                                    <Button.Template>
                                                        <ControlTemplate TargetType="Button">
                                                            <Border Background="{TemplateBinding Background}" CornerRadius="3,0,0,3">
                                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Button.Template>
                                                </Button>
                                                
                                                <Border Grid.Column="1" Width="1" Background="{StaticResource TertiaryBackground}" />

                                                <ToggleButton Grid.Column="1" Margin="1,0,0,0"
                                                              Content="&#xE8EE;" 
                                                              FontFamily="Segoe MDL2 Assets"
                                                              Style="{StaticResource IconToggleButton}"
                                                              ToolTip="{local:Translate Tab_ToggleInfiniteQueue}"
                                                              IsChecked="{Binding IsInfiniteQueueEnabled, Mode=TwoWay}"
                                                              Width="30">
                                                    <ToggleButton.Template>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border x:Name="Bg" Background="{TemplateBinding Background}" CornerRadius="0,3,3,0">
                                                                <TextBlock Text="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{TemplateBinding Foreground}"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="Bg" Property="Background" Value="{StaticResource TertiaryBackground}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter TargetName="Bg" Property="Background" Value="{StaticResource PrimaryAccentBrush}"/>
                                                                    <Setter Property="Foreground" Value="White"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </ToggleButton.Template>
                                                </ToggleButton>
                                            </Grid>
                                        </Border>

                                        <xctk:IntegerUpDown Grid.Column="1" Margin="5,0,0,0"
                                                            Value="{Binding QueueSize}"
                                                            Minimum="1"
                                                            Maximum="{Binding MaxQueueSize}"
                                                            Spinned="QueueSizeUpDown_OnSpinned"
                                                            Width="60"/>

                                        <Button Grid.Column="2"
                                                Content="&#xE74D;"
                                                Style="{StaticResource IconButton}"
                                                Background="{StaticResource ErrorBrush}"
                                                Command="{Binding ClearQueueCommand}"
                                                Margin="5,0,0,0"
                                                ToolTip="{local:Translate Tab_ClearQueue}"/>
                                    </Grid>
                                    <StackPanel Visibility="{Binding TotalTasks, Converter={StaticResource TaskCountToVisibilityConverter}}" Margin="0,5,0,0">
                                        <ProgressBar Value="{Binding CurrentProgress}" Maximum="100" Height="5" />
                                        <TextBlock HorizontalAlignment="Right" Margin="0,2,0,0" FontSize="10" Foreground="{StaticResource TextSecondaryBrush}">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource MultiBindingStringFormatConverter}">
                                                    <Binding Path="[Tab_CompletedTasks]" Source="{x:Static local:LocalizationService.Instance}" Mode="OneWay"/>
                                                    <Binding Path="CompletedTasks"/>
                                                    <Binding Path="TotalTasks"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                            
                            <Border Background="#DD3F3F46" CornerRadius="5" Padding="10"
                                    HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,10"
                                    Visibility="{Binding ImageProcessing.SelectedItemsCount, Converter={StaticResource MultiSelectCountToVisibilityConverter}}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock VerticalAlignment="Center" Margin="0,0,10,0">
                                        <Run Text="{local:Translate Tab_SelectedItems}"/>
                                        <Run Text="{Binding ImageProcessing.SelectedItemsCount}"/>
                                    </TextBlock>
                                    <Button Content="{local:Translate Tab_DeleteSelected}" Background="{StaticResource ErrorBrush}"
                                            Command="{Binding ImageProcessing.DeleteSelectedImagesCommand}"
                                            CommandParameter="{Binding ElementName=lvOutputs, Path=SelectedItems}"/>
                                </StackPanel>
                            </Border>

                            <Button Content="&#xE74D;" Style="{StaticResource IconButton}" Command="{Binding ImageProcessing.ClearOutputsCommand}" Background="{StaticResource ErrorBrush}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,10,10" ToolTip="{local:Translate Tab_ClearResults}"/>
                        </Grid>
                        </DockPanel>
                    </Border>
                </Grid>

                <Border Grid.Column="0" Grid.ColumnSpan="3" Background="{StaticResource PrimaryBackground}" Margin="5,0,5,5">
                     <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding OpenTabs.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <TextBlock Text="{local:Translate Tab_NoWorkflowSelected}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{StaticResource TextSecondaryBrush}" FontSize="16"/>
                </Border>
            </Grid>
        </Grid>

        
        <GridSplitter Grid.Row="2"
                      Height="5"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center" 
                      Background="{StaticResource TertiaryBackground}"
                      ResizeDirection="Rows"
                      ResizeBehavior="PreviousAndNext"
                      Visibility="{Binding IsConsoleVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        
        <Border Grid.Row="3" 
                Background="{StaticResource SecondaryBackground}"
                Margin="5,0,5,5"
                BorderBrush="{StaticResource TertiaryBackground}"
                BorderThickness="0,1,0,0"
                Visibility="{Binding IsConsoleVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <DockPanel>
                <Border DockPanel.Dock="Top" Padding="8,5" Background="{StaticResource TertiaryBackground}">
                    <Grid>
                        <TextBlock Text="{local:Translate Console_Title}" FontWeight="Bold" HorizontalAlignment="Left"/>
                        
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                            <Button Content="&#xE8C8;" Style="{StaticResource IconButton}" 
                                    Command="{Binding CopyConsoleCommand}"
                                    Width="24" Height="24"
                                    ToolTip="{local:Translate Console_Copy}" 
                                    Margin="0,0,5,0"/>
            
                            <Button Content="&#xE74D;" Style="{StaticResource IconButton}" 
                                    Command="{Binding ClearConsoleCommand}"
                                    Width="24" Height="24"
                                    ToolTip="{local:Translate Console_Clear}"/>
                        </StackPanel>
                    </Grid>
                </Border>
                <Grid>
                    <Border Background="{StaticResource TertiaryBackground}" CornerRadius="3" Padding="15" Margin="10"
                            HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ConsoleLogMessages.Count}" Value="0">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <TextBlock TextWrapping="Wrap" TextAlignment="Center" Foreground="{StaticResource TextSecondaryBrush}" MaxWidth="500">
                            <Run Text="{local:Translate Console_Instructions}"/>
                        </TextBlock>
                    </Border>

                    <ScrollViewer x:Name="ConsoleScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                        <ScrollViewer.Style>
                            <Style TargetType="ScrollViewer">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ConsoleLogMessages.Count}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ScrollViewer.Style>
                        <ListBox x:Name="ConsoleListBox" ItemsSource="{Binding ConsoleLogMessages}" Background="Transparent" BorderThickness="0" Margin="5"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                 PreviewMouseWheel="ConsoleListBox_PreviewMouseWheel">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <ContentPresenter/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type local:LogMessage}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Timestamp, StringFormat='HH:mm:ss'}" Foreground="{StaticResource TextSecondaryBrush}" Margin="0,0,10,0" VerticalAlignment="Top"/>
                                        <TextBlock local:TextBlockExtensions.BindableInlines="{Binding Segments}" TextWrapping="Wrap">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Level}" Value="Warning">
                                                            <Setter Property="Foreground" Value="Orange"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Level}" Value="Error">
                                                            <Setter Property="Foreground" Value="{StaticResource ErrorBrush}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Level}" Value="Critical">
                                                            <Setter Property="Foreground" Value="{StaticResource ErrorBrush}"/>
                                                            <Setter Property="FontWeight" Value="Bold"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </ScrollViewer>
                </Grid>
            </DockPanel>
        </Border>
        
        <Grid x:Name="FullScreenViewer" Grid.Row="0" Grid.RowSpan="4" Background="#D8000000"
              Visibility="{Binding FullScreen.IsFullScreenOpen, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
              MouseLeftButtonDown="FullScreenViewer_MouseLeftButtonDown"
              IsVisibleChanged="FullScreenViewer_IsVisibleChanged"
              SizeChanged="FullScreenViewer_SizeChanged">
            <Grid.Resources>
                <Style x:Key="OverlayButton" TargetType="Button"><Setter Property="Background" Value="#80000000"/> <Setter Property="Foreground" Value="White"/> <Setter Property="BorderThickness" Value="0"/> <Setter Property="FontSize" Value="24"/> <Setter Property="FontWeight" Value="Bold"/> <Setter Property="Width" Value="50"/> <Setter Property="Height" Value="50"/> <Setter Property="Cursor" Value="Hand"/><Setter Property="Template"><Setter.Value><ControlTemplate TargetType="Button"><Border Background="{TemplateBinding Background}" CornerRadius="25"><ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/></Border></ControlTemplate></Setter.Value></Setter><Style.Triggers><Trigger Property="IsMouseOver" Value="True"><Setter Property="Background" Value="#A0000000"/></Trigger><Trigger Property="IsEnabled" Value="False"><Setter Property="Opacity" Value="0.3"/></Trigger></Style.Triggers></Style>
                <Style x:Key="ToolbarButton" TargetType="Button">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="FontSize" Value="20"/>
                    <Setter Property="Margin" Value="10,0"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Template"><Setter.Value><ControlTemplate TargetType="Button"><Border Background="{TemplateBinding Background}" CornerRadius="3"><ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/></Border></ControlTemplate></Setter.Value></Setter>
                    <Style.Triggers><Trigger Property="IsMouseOver" Value="True"><Setter Property="Background" Value="#A0000000"/></Trigger></Style.Triggers>
                </Style>
                <Style x:Key="FullScreenSaveButton" TargetType="Button">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="FontSize" Value="24"/>
                    <Setter Property="Padding" Value="8"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.8"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Viewbox><Image Source="{Binding FullScreen.CurrentFullScreenImage.Image}" Stretch="Uniform"><Image.Style><Style TargetType="Image"><Setter Property="Visibility" Value="Visible"/><Style.Triggers><DataTrigger Binding="{Binding FullScreen.CurrentFullScreenImage.Type}" Value="Video"><Setter Property="Visibility" Value="Collapsed"/></DataTrigger></Style.Triggers></Style></Image.Style></Image></Viewbox>
            <MediaElement x:Name="FullScreenMediaElement"
                          Stretch="Uniform" LoadedBehavior="Manual"
                          UnloadedBehavior="Stop" IsMuted="False"
                          DataContext="{Binding FullScreen.CurrentFullScreenImage}"
                          DataContextChanged="FullScreenMediaElement_DataContextChanged"
                          MediaOpened="FullScreenMediaElement_MediaOpened"
                          MediaEnded="FullScreenMediaElement_MediaEnded">
                <MediaElement.Style>
                    <Style TargetType="MediaElement">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers><DataTrigger Binding="{Binding Type}" Value="Video"><Setter Property="Visibility" Value="Visible"/></DataTrigger></Style.Triggers>
                    </Style>
                </MediaElement.Style>
            </MediaElement>
            <Border HorizontalAlignment="Center" VerticalAlignment="Center" Background="#A0000000" CornerRadius="10" Padding="20,10" IsHitTestVisible="False">
                <Border.Style><Style TargetType="Border"><Setter Property="Visibility" Value="Collapsed"/><Setter Property="Opacity" Value="0"/><Style.Triggers><DataTrigger Binding="{Binding FullScreen.ShowSaveConfirmation}" Value="True"><Setter Property="Visibility" Value="Visible"/><DataTrigger.EnterActions><BeginStoryboard><Storyboard><DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3"/></Storyboard></BeginStoryboard></DataTrigger.EnterActions><DataTrigger.ExitActions><BeginStoryboard><Storyboard><DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3"/></Storyboard></BeginStoryboard></DataTrigger.ExitActions></DataTrigger></Style.Triggers></Style></Border.Style>
                <TextBlock Text="{Binding FullScreen.SaveConfirmationText}" Foreground="White" FontSize="18"/>
            </Border>
                
            <Grid x:Name="ControlsOverlay">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Opacity" Value="1"/>
                        <Setter Property="IsHitTestVisible" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=SafeZone}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3"/>
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible">
                                                <DiscreteBooleanKeyFrame KeyTime="0:0:0.3" Value="False"/>
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible">
                                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                
                <Border HorizontalAlignment="Left" VerticalAlignment="Top" Margin="20" Background="#A0000000" CornerRadius="5" Padding="8,4">
                    <TextBlock Text="{Binding FullScreen.CurrentFullScreenImage.Resolution}" Foreground="White" FontSize="14" />
                </Border>

                <Button Content="✕" Style="{StaticResource OverlayButton}" Command="{Binding FullScreen.CloseFullScreenCommand}"
                        HorizontalAlignment="Right" VerticalAlignment="Top" Margin="20" Width="40" Height="40" FontSize="20"
                        ToolTip="{x:Static local:Hotkeys.CloseFullscreenTooltip}"/>
                        
                <Button Content="‹" Style="{StaticResource OverlayButton}" Command="{Binding FullScreen.MovePreviousCommand}"
                        HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0"
                        ToolTip="{x:Static local:Hotkeys.MovePreviousTooltip}"/>
                        
                <Button Content="›" Style="{StaticResource OverlayButton}" Command="{Binding FullScreen.MoveNextCommand}"
                        HorizontalAlignment="Right" VerticalAlignment="Center" Margin="20,0"
                        ToolTip="{x:Static local:Hotkeys.MoveNextTooltip}"/>
                <Border VerticalAlignment="Bottom"
                        HorizontalAlignment="Center"
                        Margin="0,0,0,20"
                        Background="#A0000000"
                        CornerRadius="10">
                    <StackPanel Orientation="Vertical">
                        <Grid Margin="10,5,10,0" MinWidth="400">
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding FullScreen.CurrentFullScreenImage.Type}" Value="{x:Static local:FileType.Video}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <TextBlock x:Name="CurrentTimeTextBlock" Grid.Column="0" Text="00:00" Margin="0,0,10,0" Foreground="White" VerticalAlignment="Center"/>
                            
                            <Slider x:Name="PositionSlider" Grid.Column="1" VerticalAlignment="Center"
                                    Style="{StaticResource VideoSliderStyle}"
                                    IsMoveToPointEnabled="True"
                                    ValueChanged="PositionSlider_ValueChanged"
                                    PreviewMouseLeftButtonUp="PositionSlider_PreviewMouseLeftButtonUp"
                                    Thumb.DragStarted="PositionSlider_DragStarted"
                                    Thumb.DragCompleted="PositionSlider_DragCompleted"/>

                            <TextBlock x:Name="DurationTextBlock" Grid.Column="2" Text="00:00" Margin="10,0,0,0" Foreground="White" VerticalAlignment="Center"/>
                        </Grid>
                        <Button Content="💾"
                                ToolTip="{x:Static local:Hotkeys.SaveImageTooltip}"
                                Style="{StaticResource FullScreenSaveButton}"
                                Command="{Binding FullScreen.SaveCurrentImageCommand}"
                                HorizontalAlignment="Center"
                                Margin="5"/>
                    </StackPanel>
                </Border>
            </Grid>
            <Border x:Name="SafeZone" Background="Transparent" Margin="120, 80, 120, 100"/>
        </Grid>
        
        <!-- START: Add Group Navigation Popup -->
        <Popup x:Name="GroupNavigationPopup"
           IsOpen="{Binding IsGroupNavigationPopupOpen}"
           StaysOpen="False"
           Placement="Center"
           AllowsTransparency="True">
        <Border Background="{StaticResource SecondaryBackground}"
                BorderBrush="{StaticResource PrimaryAccentBrush}"
                BorderThickness="1"
                CornerRadius="5"
                MinWidth="250"
                MaxHeight="400">
            <DockPanel Margin="5">
                <TextBlock DockPanel.Dock="Top" Text="{local:Translate GroupNavigation_Title}" FontWeight="Bold" Margin="5"/>
                <ListBox ItemsSource="{Binding SelectedTab.WorkflowInputsController.InputGroups}"
                         Background="Transparent"
                         BorderThickness="0"
                         ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Padding" Value="8,5"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border x:Name="ItemBorder" Background="Transparent" Padding="{TemplateBinding Padding}">
                                            <ContentPresenter/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="ItemBorder" Property="Background" Value="{StaticResource TertiaryBackground}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <!-- 
                                ЗАМЕНА: Вместо сложного EventTrigger используем простой EventSetter,
                                который вызывает метод в коде. Это надежно и просто.
                            -->
                            <EventSetter Event="PreviewMouseLeftButtonUp" Handler="GroupNavigationListBoxItem_Click" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DockPanel>
        </Border>
    </Popup>
        <!-- END: Add Group Navigation Popup -->
            
    </Grid>
</Window>